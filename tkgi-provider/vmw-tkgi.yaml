## Overriding values for Chart's values.yaml
## Example values to run Confluent Operator in Private Cloud
global:
  provider:
    name: private
    ## if any name which indicates regions
    ##
    ##[//]:v2 - Region was updated to reflect DNS zone of resources being used.
    region: ((REMOVED-REGION))
    ##[//]:v2 - END
    ##
    ## Docker registry endpoint where Confluent Images are available.
    ##
    registry:
      fqdn: docker.io
      credential:
        required: false
  sasl:
    ##[//]:v2 - Changed to credentials that are more secure.
    plain:
      username: ((REMOVED-USERNAME))
      password: ((REMOVED-PASSWORD))
    ##[//]:v2 - END
  authorization:
    rbac:
      enabled: false
    simple:
      enabled: false
    superUsers: []
  dependencies:
    mds:
      endpoint: ""
      publicKey: ""

## Confluent Operator
##[//]:v1 - This entire section was added to create nodeAffinity to nodes labeled 'services'
operator:
  name: cc-operator
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: components
              operator: In
              values:
              - ops-services

## Zookeeper cluster
##
zookeeper:
  name: zookeeper
  replicas: 3
##[//]:v2 - Updated resource values to allow full CPU access, 6Gi of RAM, and a 6G JVM heap.
  resources:
    requests:
      cpu: "1"
      memory: 6Gi
  jvmConfig:
    heapSize: 6G
##[//]:v2 - END
##[//]:v2 - podAnnotations added to make the affinity rules work
  podAnnotations:
    workload: zookeeper
##[//]:v2 - END
##[//]:v2 - Added affinity and anti-affinity rules to ensure pod distribution
  affinity:
    nodeAffinity:
      key: components
      values:
      - zookeeper
      rule: PREFERRED
    podAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - zookeeper
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
    podAntiAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - zookeeper
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
##[//]:v2 - END

## Kafka Cluster
##
kafka:
  name: kafka
  replicas: 3
  ##[//]:v2 - Updated resource values to allow full CPU access, 6Gi of RAM, and a 6G JVM heap.
  resources:
    requests:
      cpu: "1"
      memory: 6Gi
  jvmConfig:
    heapSize: 6G
  ##[//]:v2 - END
  ##[//]:v2 - Enabled load balancer and configured domain property with DNS zone info.
  loadBalancer:
    enabled: true
    domain: "cotkgi.((REMOVED-REGION))"
  ##[//]:v2 - END
  tls:
    enabled: false
    fullchain: |-
    privkey: |-
    cacerts: |-
  metricReporter:
    enabled: false
##[//]:v2 - podAnnotations added to make the affinity rules work
  podAnnotations:
    workload: kafka
##[//]:v2 - END
##[//]:v2 - Added affinity and anti-affinity rules to ensure pod distribution
  affinity:
    nodeAffinity:
      key: components
      values:
      - kafka
      rule: PREFERRED
    podAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - kafka
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
    podAntiAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - kafka
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
##[//]:v2 - END

## Schema Registry
##
schemaregistry:
  name: schemaregistry
  ##[//]:v2 - Default is 2 instances, increased this to three so map across availability zones.
  replicas: 3
  ##[//]:v2 - END
  ##[//]:v2 - Added resource requests and JVM heap all tuned down from default of the chart.
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits: {}
  jvmConfig:
    heapSize: 2G 
  ##[//]:v2 - END
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 3
      bootstrapEndpoint: kafka:9071
##[//]:v2 - podAnnotations added to make the affinity rules work
  podAnnotations:
    workload: core-services
##[//]:v2 - END
##[//]:v2 - Added affinity and anti-affinity rules to ensure pod distribution
  affinity:
    nodeAffinity:
      key: components
      values:
      - core-services
      rule: PREFERRED
    podAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - core-services
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
    podAntiAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - core-services
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
##[//]:v2 - END

## Connect Cluster
##
connect:
  name: connectors
  ##[//]:v2 - Default replicas = 2, upped that amount to 3 replicas.
  replicas: 3
  ##[//]:v2 - END
  ##[//]:v2 - Added resource requests and JVM heap all tuned down from default of the chart.
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits: {}
  jvmConfig:
    heapSize: 2G 
  ##[//]:v2 - END  
  tls:
    enabled: false
    ## "" for none, "tls" for mutual auth
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      brokerCount: 3
    schemaRegistry:
      enabled: true
      url: http://schemaregistry:8081
##[//]:v2 - podAnnotations added to make the affinity rules work
  podAnnotations:
    workload: ops-services
##[//]:v2 - END
##[//]:v2 - Added affinity and anti-affinity rules to ensure pod distribution
  affinity:
    nodeAffinity:
      key: components
      values:
      - ops-services
      rule: PREFERRED
    podAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - ops-services
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
    podAntiAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - ops-services
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
##[//]:v2 - END


## Replicator Connect Cluster
##
replicator:
  name: replicator
  ##[//]:v2 - Default replicas = 2, upped that amount to 3 replicas.
  replicas: 3
  ##[//]:v2 - END
  ##[//]:v2 - Added resource requests and JVM heap all tuned down from default of the chart.
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits: {}
  jvmConfig:
    heapSize: 2G
  ##[//]:v2 - END 
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 3
      bootstrapEndpoint: kafka:9071
##[//]:v2 - podAnnotations added to make the affinity rules work
  podAnnotations:
    workload: core-services
##[//]:v2 - END
##[//]:v2 - Added affinity and anti-affinity rules to ensure pod distribution
  affinity:
    nodeAffinity:
      key: components
      values:
      - core-services
      rule: PREFERRED
    podAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - core-services
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
    podAntiAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - core-services
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
##[//]:v2 - END

## KSQL
##
ksql:
  name: ksql
  ##[//]:v2 - Default replicas = 2, upped that amount to 3 replicas.
  replicas: 3
  ##[//]:v2 - END
  ##[//]:v2 - Added resource requests and JVM heap all tuned down from default of the chart.
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits: {}
  jvmConfig:
    heapSize: 2G
  ##[//]:v2 - END 
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 3
      bootstrapEndpoint: kafka:9071
      brokerEndpoints: kafka-0.kafka:9071,kafka-1.kafka:9071,kafka-2.kafka:9071
    schemaRegistry:
      enabled: false
      tls:
        enabled: false
        authentication:
          type: ""
      url: http://schemaregistry:8081
##[//]:v2 - podAnnotations added to make the affinity rules work
  podAnnotations:
    workload: core-services
##[//]:v2 - END
##[//]:v2 - Added affinity and anti-affinity rules to ensure pod distribution
  affinity:
    nodeAffinity:
      key: components
      values:
      - core-services
      rule: PREFERRED
    podAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - core-services
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
    podAntiAffinity:
      rule: PREFERRED
      terms:
      - key: workload
        values:
        - core-services
        namespaces:
        - confluent-operator
        topologyKey:
          key: bosh.zone
        weight:
          weight: 100
##[//]:v2 - END

## Control Center (C3) Resource configuration
##
controlcenter:
  name: controlcenter
  ##[//]:v2 - Added resource requests and JVM heap all tuned down from default of the chart.
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits: {}
  jvmConfig:
    heapSize: 2G
  ##[//]:v2 - END 
  license: ""
  ##
  ## C3 dependencies
  ##
  dependencies:
    c3KafkaCluster:
      brokerCount: 3
      bootstrapEndpoint: kafka:9071
      zookeeper:
        endpoint: zookeeper:2181
    connectCluster:
      enabled: true
      url: http://connectors:8083
    ksql:
      enabled: true
      url: http://ksql:9088
    schemaRegistry:
      enabled: true
      url: http://schemaregistry:8081
  ##
  ## C3 External Access
  ##
  ##[//]:v2 - Enabled the load balancer and defined the domain to be used.
  loadBalancer:
    enabled: true
    domain: "cotkgi.((REMOVED-REGION))"
  ##[//]:v2 - END
  ##
  ## TLS configuration
  ##
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  ##
  ## C3 authentication
  ##
  auth:
    basic:
      enabled: true
      ##
      ## map with key as user and value as password and role
      property:
        ((REMOVED-USERNAME)): ((REMOVED-PASSWORD)),Administrators
        disallowed: no_access
##[//]:v2 - podAnnotations added to make the affinity rules work
  podAnnotations:
    workload: ops-services
##[//]:v2 - END
##[//]:v2 - Added affinity rule
  affinity:
    nodeAffinity:
      key: components
      values:
      - ops-services
      rule: PREFERRED
##[//]:v2 - END
